/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.72
 * Generated at: 2023-06-01 00:35:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.tiles1.schedule;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class scheduleManagement_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/NCS/workspace(spring)/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Board/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1683599588119L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

 	String ctxPath = request.getContextPath();
	//     /board

      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href='");
      out.print(ctxPath );
      out.write("/resources/fullcalendar_5.10.1/main.min.css' rel='stylesheet' />\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("div#wrapper1{\r\n");
      out.write("	float: left; display: inline-block; width: 20%; margin-top:250px; font-size: 13pt;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#wrapper2{\r\n");
      out.write("	display: inline-block; width: 80%; padding-left: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* ========== full calendar css 시작 ========== */\r\n");
      out.write(".fc-header-toolbar {\r\n");
      out.write("	height: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a, a:hover, .fc-daygrid {\r\n");
      out.write("    color: #000;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    background-color: transparent;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write(".fc-sat { color: #0000FF; }    /* 토요일 */\r\n");
      out.write(".fc-sun { color: #FF0000; }    /* 일요일 */\r\n");
      out.write("/* ========== full calendar css 끝 ========== */\r\n");
      out.write("\r\n");
      out.write("ul{\r\n");
      out.write("	list-style: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button.btn_normal{\r\n");
      out.write("	background-color: #990000;\r\n");
      out.write("	border: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	width: 50px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	font-size: 12pt;\r\n");
      out.write("	padding: 3px 0px;\r\n");
      out.write("	border-radius: 10%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button.btn_edit{\r\n");
      out.write("	border: none;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- full calendar에 관련된 script -->\r\n");
      out.write("<script src='");
      out.print(ctxPath );
      out.write("/resources/fullcalendar_5.10.1/main.min.js'></script>\r\n");
      out.write("<script src='");
      out.print(ctxPath );
      out.write("/resources/fullcalendar_5.10.1/ko.js'></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	\r\n");
      out.write("	// === 사내 캘린더에 사내캘린더 소분류 보여주기 ===\r\n");
      out.write("	showCompanyCal();\r\n");
      out.write("\r\n");
      out.write("	// === 내 캘린더에 내캘린더 소분류 보여주기 ===\r\n");
      out.write("	showmyCal();\r\n");
      out.write("	\r\n");
      out.write("	// === 사내캘린더 체크박스 전체 선택/전체 해제 === //\r\n");
      out.write("	$(\"input:checkbox[id=allComCal]\").click(function(){\r\n");
      out.write("		var bool = $(this).prop(\"checked\");\r\n");
      out.write("		$(\"input:checkbox[name=com_smcatgono]\").prop(\"checked\", bool);\r\n");
      out.write("	});// end of $(\"input:checkbox[id=allComCal]\").click(function(){})-------\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	// === 내캘린더 체크박스 전체 선택/전체 해제 === //\r\n");
      out.write("	$(\"input:checkbox[id=allMyCal]\").click(function(){		\r\n");
      out.write("		var bool = $(this).prop(\"checked\");\r\n");
      out.write("		$(\"input:checkbox[name=my_smcatgono]\").prop(\"checked\", bool);\r\n");
      out.write("	});// end of $(\"input:checkbox[id=allMyCal]\").click(function(){})-------\r\n");
      out.write("			\r\n");
      out.write("	\r\n");
      out.write("	// === 사내캘린더 에 속한 특정 체크박스를 클릭할 경우 === \r\n");
      out.write("	$(document).on(\"click\",\"input:checkbox[name=com_smcatgono]\",function(){	\r\n");
      out.write("		var bool = $(this).prop(\"checked\");\r\n");
      out.write("		\r\n");
      out.write("		if(bool){ // 체크박스에 클릭한 것이 체크된 것이라면 \r\n");
      out.write("			\r\n");
      out.write("			var flag=false;\r\n");
      out.write("			\r\n");
      out.write("			$(\"input:checkbox[name=com_smcatgono]\").each(function(index, item){\r\n");
      out.write("				var bChecked = $(item).prop(\"checked\");\r\n");
      out.write("				\r\n");
      out.write("				if(!bChecked){     // 체크되지 않았다면 \r\n");
      out.write("					flag=true;     // flag 를 true 로 변경\r\n");
      out.write("					return false;  // 반복을 빠져 나옴.\r\n");
      out.write("				}\r\n");
      out.write("			}); // end of $(\"input:checkbox[name=com_smcatgono]\").each(function(index, item){})---------\r\n");
      out.write("\r\n");
      out.write("			if(!flag){ // 사내캘린더 에 속한 서브캘린더의 체크박스가 모두 체크가 되어진 경우라면 			\r\n");
      out.write("                $(\"input#allComCal\").prop(\"checked\",true); // 사내캘린더 체크박스에 체크를 한다.\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			var com_smcatgonoArr = document.querySelectorAll(\"input.com_smcatgono\");\r\n");
      out.write("		    \r\n");
      out.write("			com_smcatgonoArr.forEach(function(item) {\r\n");
      out.write("		         item.addEventListener(\"change\", function() {  // \"change\" 대신에 \"click\" 을 해도 무방함.\r\n");
      out.write("		         //	 console.log(item);\r\n");
      out.write("		        	 calendar.refetchEvents();  // 모든 소스의 이벤트를 다시 가져와 화면에 다시 표시합니다.\r\n");
      out.write("		         });\r\n");
      out.write("		    });// end of com_smcatgonoArr.forEach(function(item) {})---------------------\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		else {\r\n");
      out.write("			   $(\"input#allComCal\").prop(\"checked\",false);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	});// end of $(document).on(\"click\",\"input:checkbox[name=com_smcatgono]\",function(){})--------\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	// === 내캘린더 에 속한 특정 체크박스를 클릭할 경우 === \r\n");
      out.write("	$(document).on(\"click\",\"input:checkbox[name=my_smcatgono]\",function(){	\r\n");
      out.write("		var bool = $(this).prop(\"checked\");\r\n");
      out.write("		\r\n");
      out.write("		if(bool){ // 체크박스에 클릭한 것이 체크된 것이라면 \r\n");
      out.write("			\r\n");
      out.write("			var flag=false;\r\n");
      out.write("			\r\n");
      out.write("			$(\"input:checkbox[name=my_smcatgono]\").each(function(index, item){\r\n");
      out.write("				var bChecked = $(item).prop(\"checked\");\r\n");
      out.write("				\r\n");
      out.write("				if(!bChecked){    // 체크되지 않았다면 \r\n");
      out.write("					flag=true;    // flag 를 true 로 변경\r\n");
      out.write("					return false; // 반복을 빠져 나옴.\r\n");
      out.write("				}\r\n");
      out.write("			}); // end of $(\"input:checkbox[name=my_smcatgono]\").each(function(index, item){})---------\r\n");
      out.write("\r\n");
      out.write("			if(!flag){	// 내캘린더 에 속한 서브캘린더의 체크박스가 모두 체크가 되어진 경우라면 	\r\n");
      out.write("                $(\"input#allMyCal\").prop(\"checked\",true); // 내캘린더 체크박스에 체크를 한다.\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			var my_smcatgonoArr = document.querySelectorAll(\"input.my_smcatgono\");\r\n");
      out.write("		      \r\n");
      out.write("			my_smcatgonoArr.forEach(function(item) {\r\n");
      out.write("				item.addEventListener(\"change\", function() {   // \"change\" 대신에 \"click\" 을 해도 무방함.\r\n");
      out.write("				 // console.log(item); \r\n");
      out.write("					calendar.refetchEvents();  // 모든 소스의 이벤트를 다시 가져와 화면에 다시 표시합니다.\r\n");
      out.write("		        });\r\n");
      out.write("		    });// end of my_smcatgonoArr.forEach(function(item) {})---------------------\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		else {\r\n");
      out.write("			   $(\"input#allMyCal\").prop(\"checked\",false);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	});// end of $(document).on(\"click\",\"input:checkbox[name=my_smcatgono]\",function(){})--------\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	// 검색할 때 필요한 datepicker\r\n");
      out.write("	// 모든 datepicker에 대한 공통 옵션 설정\r\n");
      out.write("    $.datepicker.setDefaults({\r\n");
      out.write("         dateFormat: 'yy-mm-dd'  // Input Display Format 변경\r\n");
      out.write("        ,showOtherMonths: true   // 빈 공간에 현재월의 앞뒤월의 날짜를 표시\r\n");
      out.write("        ,showMonthAfterYear:true // 년도 먼저 나오고, 뒤에 월 표시\r\n");
      out.write("        ,changeYear: true        // 콤보박스에서 년 선택 가능\r\n");
      out.write("        ,changeMonth: true       // 콤보박스에서 월 선택 가능                \r\n");
      out.write("        ,monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'] //달력의 월 부분 텍스트\r\n");
      out.write("        ,monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'] //달력의 월 부분 Tooltip 텍스트\r\n");
      out.write("        ,dayNamesMin: ['일','월','화','수','목','금','토'] //달력의 요일 부분 텍스트\r\n");
      out.write("        ,dayNames: ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'] //달력의 요일 부분 Tooltip 텍스트             \r\n");
      out.write("    });\r\n");
      out.write("	\r\n");
      out.write("    // input 을 datepicker로 선언\r\n");
      out.write("    $(\"input#fromDate\").datepicker();                    \r\n");
      out.write("    $(\"input#toDate\").datepicker();\r\n");
      out.write("    	    \r\n");
      out.write("    // From의 초기값을 한달전 날짜로 설정\r\n");
      out.write("    $('input#fromDate').datepicker('setDate', '-1M'); //(-1D:하루전, -1M:한달전, -1Y:일년전), (+1D:하루후, +1M:한달후, +1Y:일년후)\r\n");
      out.write("    \r\n");
      out.write("    // To의 초기값을 오늘 날짜로 설정\r\n");
      out.write("//  $('input#toDate').datepicker('setDate', 'today'); //(-1D:하루전, -1M:한달전, -1Y:일년전), (+1D:하루후, +1M:한달후, +1Y:일년후)	\r\n");
      out.write("	\r\n");
      out.write("    // To의 초기값을 한달후 날짜로 설정\r\n");
      out.write("    $('input#toDate').datepicker('setDate', '+1M'); //(-1D:하루전, -1M:한달전, -1Y:일년전), (+1D:하루후, +1M:한달후, +1Y:일년후)	\r\n");
      out.write("	\r\n");
      out.write("	// ==== 풀캘린더와 관련된 소스코드 시작(화면이 로드되면 캘린더 전체 화면 보이게 해줌) ==== //\r\n");
      out.write("	var calendarEl = document.getElementById('calendar');\r\n");
      out.write("        \r\n");
      out.write("    var calendar = new FullCalendar.Calendar(calendarEl, {\r\n");
      out.write("        initialView: 'dayGridMonth',\r\n");
      out.write("        locale: 'ko',\r\n");
      out.write("        selectable: true,\r\n");
      out.write("	    editable: false,\r\n");
      out.write("	    headerToolbar: {\r\n");
      out.write("	    	  left: 'prev,next today',\r\n");
      out.write("	          center: 'title',\r\n");
      out.write("	          right: 'dayGridMonth dayGridWeek dayGridDay'\r\n");
      out.write("	    },\r\n");
      out.write("	    dayMaxEventRows: true, // for all non-TimeGrid views\r\n");
      out.write("	    views: {\r\n");
      out.write("	      timeGrid: {\r\n");
      out.write("	        dayMaxEventRows: 3 // adjust to 6 only for timeGridWeek/timeGridDay\r\n");
      out.write("	      }\r\n");
      out.write("	    },\r\n");
      out.write("		\r\n");
      out.write("	    // ===================== DB 와 연동하는 법 시작 ===================== //\r\n");
      out.write("    	events:function(info, successCallback, failureCallback) {\r\n");
      out.write("	\r\n");
      out.write("	    	 $.ajax({\r\n");
      out.write("                 url: '");
      out.print( ctxPath);
      out.write("/schedule/selectSchedule.action',\r\n");
      out.write("                 data:{\"fk_userid\":$('input#fk_userid').val()},\r\n");
      out.write("                 dataType: \"json\",\r\n");
      out.write("                 success:function(json) {\r\n");
      out.write("                	 /*\r\n");
      out.write("                	    json 의 값 예\r\n");
      out.write("                	    [{\"enddate\":\"2021-11-26 18:00:00.0\",\"fk_lgcatgono\":\"2\",\"color\":\"#009900\",\"scheduleno\":\"1\",\"fk_smcatgono\":\"4\",\"subject\":\"파이널 프로젝트 코딩\",\"startdate\":\"2021-11-08 09:00:00.0\",\"fk_userid\":\"seoyh\"},{\"enddate\":\"2021-11-29 13:50:00.0\",\"fk_lgcatgono\":\"1\",\"color\":\"#990008\",\"scheduleno\":\"2\",\"fk_smcatgono\":\"7\",\"subject\":\"팀원들 점심식사\",\"joinuser\":\"leess,eomjh\",\"startdate\":\"2021-11-29 12:50:00.0\",\"fk_userid\":\"seoyh\"},{\"enddate\":\"2021-12-02 20:00:00.0\",\"fk_lgcatgono\":\"1\",\"color\":\"#300bea\",\"scheduleno\":\"3\",\"fk_smcatgono\":\"11\",\"subject\":\"팀원들 뒤풀이 여행\",\"joinuser\":\"leess,eomjh\",\"startdate\":\"2021-12-01 09:00:00.0\",\"fk_userid\":\"seoyh\"}]\r\n");
      out.write("                	 */\r\n");
      out.write("                	 var events = [];\r\n");
      out.write("                     if(json.length > 0){\r\n");
      out.write("                         \r\n");
      out.write("                             $.each(json, function(index, item) {\r\n");
      out.write("                                    var startdate = moment(item.startdate).format('YYYY-MM-DD HH:mm:ss');\r\n");
      out.write("                                    var enddate = moment(item.enddate).format('YYYY-MM-DD HH:mm:ss');\r\n");
      out.write("                                    var subject = item.subject;\r\n");
      out.write("                              \r\n");
      out.write("                                   // 사내 캘린더로 등록된 일정을 풀캘린더 달력에 보여주기 \r\n");
      out.write("                                   // 일정등록시 사내 캘린더에서 선택한 소분류에 등록된 일정을 풀캘린더 달력 날짜에 나타내어지게 한다.\r\n");
      out.write("                                   if( $(\"input:checkbox[name=com_smcatgono]:checked\").length <= $(\"input:checkbox[name=com_smcatgono]\").length ){\r\n");
      out.write("	                                   \r\n");
      out.write("	                                   for(var i=0; i<$(\"input:checkbox[name=com_smcatgono]:checked\").length; i++){\r\n");
      out.write("	                                	  \r\n");
      out.write("	                                		   if($(\"input:checkbox[name=com_smcatgono]:checked\").eq(i).val() == item.fk_smcatgono){\r\n");
      out.write("	   			                               //  alert(\"캘린더 소분류 번호 : \" + $(\"input:checkbox[name=com_smcatgono]:checked\").eq(i).val());\r\n");
      out.write("	                                			   events.push({\r\n");
      out.write("	   			                                	            id: item.scheduleno,\r\n");
      out.write("	   			                                                title: item.subject,\r\n");
      out.write("	   			                                                start: startdate,\r\n");
      out.write("	   			                                                end: enddate,\r\n");
      out.write("	   			                                        	    url: \"");
      out.print( ctxPath);
      out.write("/schedule/detailSchedule.action?scheduleno=\"+item.scheduleno,\r\n");
      out.write("	   			                                                color: item.color,\r\n");
      out.write("	   			                                                cid: item.fk_smcatgono  // 사내캘린더 내의 서브캘린더 체크박스의 value값과 일치하도록 만들어야 한다. 그래야만 서브캘린더의 체크박스와 cid 값이 연결되어 체크시 풀캘린더에서 일정이 보여지고 체크해제시 풀캘린더에서 일정이 숨겨져 안보이게 된다. \r\n");
      out.write("	   			                                   }); // end of events.push({})---------\r\n");
      out.write("	   		                                   }\r\n");
      out.write("	                                	   \r\n");
      out.write("	                                   }// end of for-------------------------------------\r\n");
      out.write("	                                 \r\n");
      out.write("                                   }// end of if-------------------------------------------\r\n");
      out.write("                                    \r\n");
      out.write("                                  \r\n");
      out.write("                                  // 내 캘린더로 등록된 일정을 풀캘린더 달력에 보여주기\r\n");
      out.write("                                  // 일정등록시 내 캘린더에서 선택한 소분류에 등록된 일정을 풀캘린더 달력 날짜에 나타내어지게 한다.\r\n");
      out.write("                                  if( $(\"input:checkbox[name=my_smcatgono]:checked\").length <= $(\"input:checkbox[name=my_smcatgono]\").length ){\r\n");
      out.write("	                                   \r\n");
      out.write("	                                   for(var i=0; i<$(\"input:checkbox[name=my_smcatgono]:checked\").length; i++){\r\n");
      out.write("	                                	  \r\n");
      out.write("	                                		   if($(\"input:checkbox[name=my_smcatgono]:checked\").eq(i).val() == item.fk_smcatgono && item.fk_userid == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" ){\r\n");
      out.write("	   			                               //  alert(\"캘린더 소분류 번호 : \" + $(\"input:checkbox[name=my_smcatgono]:checked\").eq(i).val());\r\n");
      out.write("	                                			   events.push({\r\n");
      out.write("	   			                                	            id: item.scheduleno,\r\n");
      out.write("	   			                                                title: item.subject,\r\n");
      out.write("	   			                                                start: startdate,\r\n");
      out.write("	   			                                                end: enddate,\r\n");
      out.write("	   			                                        	    url: \"");
      out.print( ctxPath);
      out.write("/schedule/detailSchedule.action?scheduleno=\"+item.scheduleno,\r\n");
      out.write("	   			                                                color: item.color,\r\n");
      out.write("	   			                                                cid: item.fk_smcatgono  // 내캘린더 내의 서브캘린더 체크박스의 value값과 일치하도록 만들어야 한다. 그래야만 서브캘린더의 체크박스와 cid 값이 연결되어 체크시 풀캘린더에서 일정이 보여지고 체크해제시 풀캘린더에서 일정이 숨겨져 안보이게 된다. \r\n");
      out.write("	   			                                   }); // end of events.push({})---------\r\n");
      out.write("	   	                                    }\r\n");
      out.write("	                                   }// end of for-------------------------------------\r\n");
      out.write("                                   \r\n");
      out.write("                                   }// end of if-------------------------------------------\r\n");
      out.write("\r\n");
      out.write("                                 \r\n");
      out.write("                                  // 공유받은 캘린더(다른 사용자가 내캘린더로 만든 것을 공유받은 경우임)\r\n");
      out.write("                                  if (item.fk_lgcatgono==1 && item.fk_userid != \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" && (item.joinuser).indexOf(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") != -1 ){  \r\n");
      out.write("                                        \r\n");
      out.write("  	                                   events.push({\r\n");
      out.write("  	                                	   			id: \"0\",  // \"0\" 인 이유는  배열 events 에 push 할때 id는 고유해야 하는데 위의 사내캘린더 및 내캘린더에서 push 할때 id값으로 item.scheduleno 을 사용하였다. item.scheduleno 값은 DB에서 1 부터 시작하는 시퀀스로 사용된 값이므로 0 값은 위의 사내캘린더나 내캘린더에서 사용되지 않으므로 여기서 고유한 값을 사용하기 위해 0 값을 준 것이다. \r\n");
      out.write("  	                                                title: item.subject,\r\n");
      out.write("  	                                                start: startdate,\r\n");
      out.write("  	                                                end: enddate,\r\n");
      out.write("  	                                        	    url: \"");
      out.print( ctxPath);
      out.write("/schedule/detailSchedule.action?scheduleno=\"+item.scheduleno,\r\n");
      out.write("  	                                                color: item.color,\r\n");
      out.write("  	                                                cid: \"0\"  // \"0\" 인 이유는  공유받은캘린더 에서의 체크박스의 value 를 \"0\" 으로 주었기 때문이다.\r\n");
      out.write("  	                                   }); // end of events.push({})--------- \r\n");
      out.write("  	                                   \r\n");
      out.write("  	                           		}// end of if------------------------- \r\n");
      out.write("                                \r\n");
      out.write("                             }); // end of $.each(json, function(index, item) {})-----------------------\r\n");
      out.write("                         }                             \r\n");
      out.write("                         \r\n");
      out.write("                      // console.log(events);                       \r\n");
      out.write("                         successCallback(events);                               \r\n");
      out.write("                  },\r\n");
      out.write("				  error: function(request, status, error){\r\n");
      out.write("			            alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("			      }	\r\n");
      out.write("                                            \r\n");
      out.write("          }); // end of $.ajax()--------------------------------\r\n");
      out.write("        \r\n");
      out.write("        }, // end of events:function(info, successCallback, failureCallback) {}---------\r\n");
      out.write("        // ===================== DB 와 연동하는 법 끝 ===================== //\r\n");
      out.write("        \r\n");
      out.write("		// 풀캘린더에서 날짜 클릭할 때 발생하는 이벤트(일정 등록창으로 넘어간다)\r\n");
      out.write("        dateClick: function(info) {\r\n");
      out.write("      	 // alert('클릭한 Date: ' + info.dateStr); // 클릭한 Date: 2021-11-20\r\n");
      out.write("      	    $(\".fc-day\").css('background','none'); // 현재 날짜 배경색 없애기\r\n");
      out.write("      	    info.dayEl.style.backgroundColor = '#b1b8cd'; // 클릭한 날짜의 배경색 지정하기\r\n");
      out.write("      	    $(\"form > input[name=chooseDate]\").val(info.dateStr);\r\n");
      out.write("      	    \r\n");
      out.write("      	    var frm = document.dateFrm;\r\n");
      out.write("      	    frm.method=\"POST\";\r\n");
      out.write("      	    frm.action=\"");
      out.print( ctxPath);
      out.write("/schedule/insertSchedule.action\";\r\n");
      out.write("      	    frm.submit();\r\n");
      out.write("      	  },\r\n");
      out.write("      	  \r\n");
      out.write("      	 // === 사내캘린더, 내캘린더, 공유받은캘린더의 체크박스에 체크유무에 따라 일정을 보여주거나 일정을 숨기게 하는 것이다. === \r\n");
      out.write("    	 eventDidMount: function (arg) {\r\n");
      out.write("	            var arr_calendar_checkbox = document.querySelectorAll(\"input.calendar_checkbox\"); \r\n");
      out.write("	            // 사내캘린더, 내캘린더, 공유받은캘린더 에서의 모든 체크박스임\r\n");
      out.write("	            \r\n");
      out.write("	            arr_calendar_checkbox.forEach(function(item) { // item 이 사내캘린더, 내캘린더, 공유받은캘린더 에서의 모든 체크박스 중 하나인 체크박스임\r\n");
      out.write("		              if (item.checked) { \r\n");
      out.write("		            	// 사내캘린더, 내캘린더, 공유받은캘린더 에서의 체크박스중 체크박스에 체크를 한 경우 라면\r\n");
      out.write("		                \r\n");
      out.write("		            	if (arg.event.extendedProps.cid === item.value) { // item.value 가 체크박스의 value 값이다.\r\n");
      out.write("		                	// console.log(\"일정을 보여주는 cid : \"  + arg.event.extendedProps.cid);\r\n");
      out.write("		                	// console.log(\"일정을 보여주는 체크박스의 value값(item.value) : \" + item.value);\r\n");
      out.write("		                    \r\n");
      out.write("		                	arg.el.style.display = \"block\"; // 풀캘린더에서 일정을 보여준다.\r\n");
      out.write("		                }\r\n");
      out.write("		              } \r\n");
      out.write("		              \r\n");
      out.write("		              else { \r\n");
      out.write("		            	// 사내캘린더, 내캘린더, 공유받은캘린더 에서의 체크박스중 체크박스에 체크를 해제한 경우 라면\r\n");
      out.write("		                \r\n");
      out.write("		            	if (arg.event.extendedProps.cid === item.value) {\r\n");
      out.write("		            		// console.log(\"일정을 숨기는 cid : \"  + arg.event.extendedProps.cid);\r\n");
      out.write("		                	// console.log(\"일정을 숨기는 체크박스의 value값(item.value) : \" + item.value);\r\n");
      out.write("		                	\r\n");
      out.write("		            		arg.el.style.display = \"none\"; // 풀캘린더에서 일정을  숨긴다.\r\n");
      out.write("		                }\r\n");
      out.write("		              }\r\n");
      out.write("	            });// end of arr_calendar_checkbox.forEach(function(item) {})------------\r\n");
      out.write("	      }\r\n");
      out.write("  });\r\n");
      out.write("    \r\n");
      out.write("  calendar.render();  // 풀캘린더 보여주기\r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write("  var arr_calendar_checkbox = document.querySelectorAll(\"input.calendar_checkbox\"); \r\n");
      out.write("  // 사내캘린더, 내캘린더, 공유받은캘린더 에서의 체크박스임\r\n");
      out.write("  \r\n");
      out.write("  arr_calendar_checkbox.forEach(function(item) {\r\n");
      out.write("	  item.addEventListener(\"change\", function () {\r\n");
      out.write("      // console.log(item);\r\n");
      out.write("		 calendar.refetchEvents(); // 모든 소스의 이벤트를 다시 가져와 화면에 다시 표시합니다.\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("  //==== 풀캘린더와 관련된 소스코드 끝(화면이 로드되면 캘린더 전체 화면 보이게 해줌) ==== //\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  // 검색 할 때 엔터를 친 경우\r\n");
      out.write("  $(\"input#searchWord\").keyup(function(event){\r\n");
      out.write("	 if(event.keyCode == 13){ \r\n");
      out.write("		 goSearch();\r\n");
      out.write("	 }\r\n");
      out.write("  });\r\n");
      out.write(" \r\n");
      out.write("    \r\n");
      out.write("  // 모달 창에서 입력된 값 초기화 시키기 //\r\n");
      out.write("  $(\"button.modal_close\").on(\"click\", function(){\r\n");
      out.write("	  var modal_frmArr = document.querySelectorAll(\"form[name=modal_frm]\");\r\n");
      out.write("	  for(var i=0; i<modal_frmArr.length; i++) {\r\n");
      out.write("		  modal_frmArr[i].reset();\r\n");
      out.write("	  }\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("      \r\n");
      out.write("}); // end of $(document).ready(function(){})==============================\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// ~~~~~~~ Function Declartion ~~~~~~~\r\n");
      out.write("\r\n");
      out.write("// === 사내 캘린더 소분류 추가를 위해 +아이콘 클릭시 ===\r\n");
      out.write("function addComCalendar(){\r\n");
      out.write("	$('#modal_addComCal').modal('show'); // 모달창 보여주기	\r\n");
      out.write("}// end of function addComCalendar(){}--------------------\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("// === 사내 캘린더 추가 모달창에서 추가 버튼 클릭시 ===\r\n");
      out.write("function goAddComCal(){\r\n");
      out.write("	\r\n");
      out.write("	if($(\"input.add_com_smcatgoname\").val().trim() == \"\"){\r\n");
      out.write(" 		  alert(\"추가할 사내캘린더 소분류명을 입력하세요!!\");\r\n");
      out.write(" 		  return;\r\n");
      out.write(" 	}\r\n");
      out.write("	\r\n");
      out.write(" 	else {\r\n");
      out.write(" 		 $.ajax({\r\n");
      out.write(" 			 url: \"");
      out.print( ctxPath);
      out.write("/schedule/addComCalendar.action\",\r\n");
      out.write(" 			 type: \"post\",\r\n");
      out.write(" 			 data: {\"com_smcatgoname\": $(\"input.add_com_smcatgoname\").val(), \r\n");
      out.write(" 				    \"fk_userid\": \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"},\r\n");
      out.write(" 			 dataType: \"json\",\r\n");
      out.write(" 			 success:function(json){\r\n");
      out.write(" 				 if(json.n != 1){\r\n");
      out.write("  					alert(\"이미 존재하는 '사내캘린더 소분류명' 입니다.\");\r\n");
      out.write("  					return;\r\n");
      out.write("  				 }\r\n");
      out.write(" 				 else if(json.n == 1){\r\n");
      out.write(" 					 $('#modal_addComCal').modal('hide'); // 모달창 감추기				\r\n");
      out.write(" 					 alert(\"사내 캘린더에 \"+$(\"input.add_com_smcatgoname\").val()+\" 소분류명이 추가되었습니다.\");\r\n");
      out.write(" 					 \r\n");
      out.write(" 					 $(\"input.add_com_smcatgoname\").val(\"\");\r\n");
      out.write(" 					 showCompanyCal();  // 사내 캘린더 소분류 보여주기\r\n");
      out.write(" 				 }\r\n");
      out.write(" 			 },\r\n");
      out.write(" 			 error: function(request, status, error){\r\n");
      out.write("  	            alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("    	     }	 \r\n");
      out.write(" 		 });\r\n");
      out.write(" 	  }\r\n");
      out.write("	\r\n");
      out.write("}// end of function goAddComCal(){}------------------------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// === 사내 캘린더에서 사내캘린더 소분류  보여주기  === //\r\n");
      out.write("function showCompanyCal(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		 url:\"");
      out.print( ctxPath);
      out.write("/schedule/showCompanyCalendar.action\",\r\n");
      out.write("		 type:\"get\",\r\n");
      out.write("		 dataType:\"json\",\r\n");
      out.write("		 success:function(json){\r\n");
      out.write("				 var html = \"\";\r\n");
      out.write("				 \r\n");
      out.write("				 if(json.length > 0){\r\n");
      out.write("					 html += \"<table style='width:80%;'>\";\r\n");
      out.write("					 \r\n");
      out.write("					 $.each(json, function(index, item){\r\n");
      out.write("						 html += \"<tr style='font-size: 11pt;'>\";\r\n");
      out.write("						 html += \"<td style='width:60%; padding: 3px 0px;'><input type='checkbox' name='com_smcatgono' class='calendar_checkbox com_smcatgono' style='margin-right: 3px;' value='\"+item.smcatgono+\"' checked id='com_smcatgono_\"+index+\"'/><label for='com_smcatgono_\"+index+\"'>\"+item.smcatgoname+\"</label></td>\";  \r\n");
      out.write("						 \r\n");
      out.write("						 ");
      out.write("\r\n");
      out.write("						 if(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.gradelevel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" =='10') {\r\n");
      out.write("							 html += \"<td style='width:20%; padding: 3px 0px;'><button class='btn_edit' data-target='editCal' onclick='editComCalendar(\"+item.smcatgono+\",\\\"\"+item.smcatgoname+\"\\\")'><i class='fas fa-edit'></i></button></td>\";  \r\n");
      out.write("							 html += \"<td style='width:20%; padding: 3px 0px;'><button class='btn_edit delCal' onclick='delCalendar(\"+item.smcatgono+\",\\\"\"+item.smcatgoname+\"\\\")'><i class='fas fa-trash'></i></button></td>\";\r\n");
      out.write("						 }\r\n");
      out.write("						 \r\n");
      out.write("						 html += \"</tr>\";\r\n");
      out.write("					 });\r\n");
      out.write("				 	 \r\n");
      out.write("					 html += \"</table>\";\r\n");
      out.write("				 }\r\n");
      out.write("			 \r\n");
      out.write("				 $(\"div#companyCal\").html(html);\r\n");
      out.write("		},\r\n");
      out.write("		error: function(request, status, error){\r\n");
      out.write("	           alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("        }	 	\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("}// end of function showCompanyCal()------------------	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// === 사내 캘린더내의 서브캘린더 수정 모달창 나타나기 === \r\n");
      out.write("function editComCalendar(smcatgono, smcatgoname){\r\n");
      out.write("	$('#modal_editComCal').modal('show'); // 모달 보이기\r\n");
      out.write("	$(\"input.edit_com_smcatgono\").val(smcatgono);\r\n");
      out.write("	$(\"input.edit_com_smcatgoname\").val(smcatgoname);\r\n");
      out.write("}// end of function editComCalendar(smcatgono, smcatgoname){}----------------------\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("// === 사내 캘린더내의 서브캘린더 수정 모달창에서 수정하기 클릭 === \r\n");
      out.write("function goEditComCal(){\r\n");
      out.write("	\r\n");
      out.write("	if($(\"input.edit_com_smcatgoname\").val().trim() == \"\"){\r\n");
      out.write("  		  alert(\"수정할 사내캘린더 소분류명을 입력하세요!!\");\r\n");
      out.write("  		  return;\r\n");
      out.write("  	}\r\n");
      out.write("  	else{\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:\"");
      out.print( ctxPath);
      out.write("/schedule/editCalendar.action\",\r\n");
      out.write("			type: \"post\",\r\n");
      out.write("			data:{\"smcatgono\":$(\"input.edit_com_smcatgono\").val(), \r\n");
      out.write("				  \"smcatgoname\": $(\"input.edit_com_smcatgoname\").val(), \r\n");
      out.write("				  \"userid\":\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("				  \"caltype\":\"2\"  // 사내캘린더\r\n");
      out.write("			     },\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			success:function(json){\r\n");
      out.write("				if(json.n == 0){\r\n");
      out.write("   					alert($(\"input.edit_com_smcatgoname\").val()+\"은(는) 이미 존재하는 캘린더 명입니다.\");\r\n");
      out.write("   					return;\r\n");
      out.write("   				 }\r\n");
      out.write("				if(json.n == 1){\r\n");
      out.write("					$('#modal_editComCal').modal('hide'); // 모달 숨기기\r\n");
      out.write("					alert(\"사내 캘린더명을 수정하였습니다.\");\r\n");
      out.write("					showCompanyCal();\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			 error: function(request, status, error){\r\n");
      out.write("		            alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("  	  }\r\n");
      out.write("	\r\n");
      out.write("}// end of function goEditComCal(){}--------------------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //	\r\n");
      out.write("\r\n");
      out.write("// === 내 캘린더 소분류 추가를 위해 +아이콘 클릭시 ===\r\n");
      out.write("function addMyCalendar(){\r\n");
      out.write("	$('#modal_addMyCal').modal('show');	\r\n");
      out.write("}// end of function addMyCalendar(){}-----------------\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("// === 내 캘린더 추가 모달창에서 추가 버튼 클릭시 === \r\n");
      out.write("function goAddMyCal(){\r\n");
      out.write("	\r\n");
      out.write("	if($(\"input.add_my_smcatgoname\").val().trim() == \"\"){\r\n");
      out.write(" 		  alert(\"추가할 내캘린더 소분류명을 입력하세요!!\");\r\n");
      out.write(" 		  return;\r\n");
      out.write(" 	}\r\n");
      out.write(" 	\r\n");
      out.write("	else {\r\n");
      out.write(" 		  $.ajax({\r\n");
      out.write(" 			 url: \"");
      out.print( ctxPath);
      out.write("/schedule/addMyCalendar.action\",\r\n");
      out.write(" 			 type: \"post\",\r\n");
      out.write(" 			 data: {\"my_smcatgoname\": $(\"input.add_my_smcatgoname\").val(), \r\n");
      out.write(" 				    \"fk_userid\": \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"},\r\n");
      out.write(" 			 dataType: \"json\",\r\n");
      out.write(" 			 success:function(json){\r\n");
      out.write(" 				 \r\n");
      out.write(" 				 if(json.n!=1){\r\n");
      out.write(" 					alert(\"이미 존재하는 '내캘린더 소분류명' 입니다.\");\r\n");
      out.write(" 					return;\r\n");
      out.write(" 				 }\r\n");
      out.write(" 				 else if(json.n==1){\r\n");
      out.write(" 					 $('#modal_addMyCal').modal('hide'); // 모달창 감추기\r\n");
      out.write(" 					 alert(\"내 캘린더에 \"+$(\"input.add_my_smcatgoname\").val()+\" 소분류명이 추가되었습니다.\");\r\n");
      out.write(" 					 \r\n");
      out.write(" 					 $(\"input.add_my_smcatgoname\").val(\"\");\r\n");
      out.write(" 				 	 showmyCal(); // 내 캘린더 소분류 보여주기\r\n");
      out.write(" 				 }\r\n");
      out.write(" 			 },\r\n");
      out.write(" 			 error: function(request, status, error){\r\n");
      out.write("  	            alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("    	     }	 \r\n");
      out.write(" 		 });\r\n");
      out.write(" 	  }\r\n");
      out.write("	\r\n");
      out.write("}// end of function goAddMyCal(){}-----------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// === 내 캘린더에서 내캘린더 소분류 보여주기  === //\r\n");
      out.write("function showmyCal(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		 url:\"");
      out.print( ctxPath);
      out.write("/schedule/showMyCalendar.action\",\r\n");
      out.write("		 type:\"get\",\r\n");
      out.write("		 data:{\"fk_userid\":\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"},\r\n");
      out.write("		 dataType:\"json\",\r\n");
      out.write("		 success:function(json){\r\n");
      out.write("			 var html = \"\";\r\n");
      out.write("			 if(json.length > 0){\r\n");
      out.write("				 html += \"<table style='width:80%;'>\";	 \r\n");
      out.write("				 \r\n");
      out.write("				 $.each(json, function(index, item){\r\n");
      out.write("					 html += \"<tr style='font-size: 11pt;'>\";\r\n");
      out.write("					 html += \"<td style='width:60%; padding: 3px 0px;'><input type='checkbox' name='my_smcatgono' class='calendar_checkbox my_smcatgono' style='margin-right: 3px;' value='\"+item.smcatgono+\"' checked id='my_smcatgono_\"+index+\"' checked/><label for='my_smcatgono_\"+index+\"'>\"+item.smcatgoname+\"</label></td>\";   \r\n");
      out.write("					 html += \"<td style='width:20%; padding: 3px 0px;'><button class='btn_edit editCal' data-target='editCal' onclick='editMyCalendar(\"+item.smcatgono+\",\\\"\"+item.smcatgoname+\"\\\")'><i class='fas fa-edit'></i></button></td>\"; \r\n");
      out.write("					 html += \"<td style='width:20%; padding: 3px 0px;'><button class='btn_edit delCal' onclick='delCalendar(\"+item.smcatgono+\",\\\"\"+item.smcatgoname+\"\\\")'><i class='fas fa-trash'></i></button></td>\";\r\n");
      out.write("				     html += \"</tr>\";\r\n");
      out.write("				 });\r\n");
      out.write("				 \r\n");
      out.write("				 html += \"</table>\";\r\n");
      out.write("			 }\r\n");
      out.write("			 \r\n");
      out.write("			 $(\"div#myCal\").html(html);\r\n");
      out.write("		 },\r\n");
      out.write("		 error: function(request, status, error){\r\n");
      out.write("	            alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("	     }	 	\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("}// end of function showmyCal()---------------------	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// === 내 캘린더내의 서브캘린더 수정 모달창 나타나기 === \r\n");
      out.write("function editMyCalendar(smcatgono, smcatgoname){\r\n");
      out.write("	$('#modal_editMyCal').modal('show');  // 모달 보이기\r\n");
      out.write("	$(\"input.edit_my_smcatgono\").val(smcatgono);\r\n");
      out.write("	$(\"input.edit_my_smcatgoname\").val(smcatgoname);\r\n");
      out.write("}// end of function editMyCalendar(smcatgono, smcatgoname){}-----------------------\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("// === 내 캘린더내의 서브캘린더 수정 모달창에서 수정 클릭 === \r\n");
      out.write("function goEditMyCal(){\r\n");
      out.write("	\r\n");
      out.write("	if($(\"input.edit_my_smcatgoname\").val().trim() == \"\"){\r\n");
      out.write("		  alert(\"수정할 내캘린더 소분류명을 입력하세요!!\");\r\n");
      out.write("		  return;\r\n");
      out.write("	}\r\n");
      out.write("  	else{\r\n");
      out.write("		 $.ajax({\r\n");
      out.write("			url:\"");
      out.print( ctxPath);
      out.write("/schedule/editCalendar.action\",\r\n");
      out.write("			type: \"post\",\r\n");
      out.write("			data:{\"smcatgono\":$(\"input.edit_my_smcatgono\").val(), \r\n");
      out.write("				  \"smcatgoname\": $(\"input.edit_my_smcatgoname\").val(), \r\n");
      out.write("				  \"userid\":\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\r\n");
      out.write("				  \"caltype\":\"1\"  // 내캘린더\r\n");
      out.write("				  },\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			success:function(json){\r\n");
      out.write("				if(json.n == 0){\r\n");
      out.write("					alert($(\"input.edit_com_smcatgoname\").val()+\"은(는) 이미 존재하는 캘린더 명입니다.\");\r\n");
      out.write("   					return;\r\n");
      out.write("   				 }\r\n");
      out.write("				if(json.n == 1){\r\n");
      out.write("					$('#editMyCal').modal('hide'); // 모달 숨기기\r\n");
      out.write("					alert(\"내캘린더명을 수정하였습니다.\");\r\n");
      out.write("					showmyCal(); \r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			 error: function(request, status, error){\r\n");
      out.write("		            alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("  	  }\r\n");
      out.write("	\r\n");
      out.write("}// end of function goEditMyCal(){}-------------------------------------\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//		\r\n");
      out.write("\r\n");
      out.write("// === (사내캘린더 또는 내캘린더)속의 소분류 카테고리 삭제하기 === \r\n");
      out.write("function delCalendar(smcatgono, smcatgoname){ // smcatgono => 캘린더 소분류 번호, smcatgoname => 캘린더 소분류 명\r\n");
      out.write("	\r\n");
      out.write("	var bool = confirm(smcatgoname + \" 캘린더를 삭제 하시겠습니까?\");\r\n");
      out.write("	\r\n");
      out.write("	if(bool){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:\"");
      out.print( ctxPath);
      out.write("/schedule/deleteSubCalendar.action\",\r\n");
      out.write("			type: \"post\",\r\n");
      out.write("			data:{\"smcatgono\":smcatgono},\r\n");
      out.write("			dataType:\"json\",\r\n");
      out.write("			success:function(json){\r\n");
      out.write("				if(json.n==1){\r\n");
      out.write("					alert(smcatgoname + \" 캘린더를 삭제하였습니다.\");\r\n");
      out.write("					location.href=\"javascript:history.go(0);\"; // 페이지 새로고침\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error: function(request, status, error){\r\n");
      out.write("		            alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("}// end of function delCalendar(smcatgono, smcatgoname){}------------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// === 검색 기능 === //\r\n");
      out.write("function goSearch(){\r\n");
      out.write("\r\n");
      out.write("	if( $(\"#fromDate\").val() > $(\"#toDate\").val() ) {\r\n");
      out.write("		alert(\"검색 시작날짜가 검색 종료날짜 보다 크므로 검색할 수 없습니다.\");\r\n");
      out.write("		return;\r\n");
      out.write("	}\r\n");
      out.write("    \r\n");
      out.write("	if( $(\"select#searchType\").val()==\"\" && $(\"input#searchWord\").val()!=\"\" ) {\r\n");
      out.write("		alert(\"검색대상 선택을 해주세요!!\");\r\n");
      out.write("		return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	if( $(\"select#searchType\").val()!=\"\" && $(\"input#searchWord\").val()==\"\" ) {\r\n");
      out.write("		alert(\"검색어를 입력하세요!!\");\r\n");
      out.write("		return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("   	var frm = document.searchScheduleFrm;\r\n");
      out.write("    frm.method=\"get\";\r\n");
      out.write("    frm.action=\"");
      out.print( ctxPath);
      out.write("/schedule/searchSchedule.action\";\r\n");
      out.write("    frm.submit();\r\n");
      out.write("	\r\n");
      out.write("}// end of function goSearch(){}--------------------------\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div style=\"margin-left: 80px; width: 88%;\">\r\n");
      out.write("	\r\n");
      out.write("	<h3>일정 관리</h3>\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"wrapper1\">\r\n");
      out.write("		<input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"fk_userid\"/>\r\n");
      out.write("		\r\n");
      out.write("		<input type=\"checkbox\" id=\"allComCal\" class=\"calendar_checkbox\" checked/>&nbsp;&nbsp;<label for=\"allComCal\">사내 캘린더</label>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	     ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("	");
      out.write(" \r\n");
      out.write("	    \r\n");
      out.write("	    ");
      out.write("\r\n");
      out.write("		<div id=\"companyCal\" style=\"margin-left: 50px; margin-bottom: 10px;\"></div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<input type=\"checkbox\" id=\"allMyCal\" class=\"calendar_checkbox\" checked/>&nbsp;&nbsp;<label for=\"allMyCal\">내 캘린더</label>\r\n");
      out.write("		<button class=\"btn_edit\" style=\"float: right;\" onclick=\"addMyCalendar()\"><i class='fas'>&#xf055;</i></button>\r\n");
      out.write("		\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<div id=\"myCal\" style=\"margin-left: 50px; margin-bottom: 10px;\"></div>\r\n");
      out.write("\r\n");
      out.write("		<input type=\"checkbox\" id=\"sharedCal\" class=\"calendar_checkbox\" value=\"0\" checked/>&nbsp;&nbsp;<label for=\"sharedCal\">공유받은 캘린더</label> \r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"wrapper2\">\r\n");
      out.write("		<div id=\"searchPart\" style=\"float: right;\">\r\n");
      out.write("			<form name=\"searchScheduleFrm\">\r\n");
      out.write("				<div>\r\n");
      out.write("					<input type=\"text\" id=\"fromDate\" name=\"startdate\" style=\"width: 90px;\" readonly=\"readonly\">&nbsp;&nbsp; \r\n");
      out.write("	            -&nbsp;&nbsp; <input type=\"text\" id=\"toDate\" name=\"enddate\" style=\"width: 90px;\" readonly=\"readonly\">&nbsp;&nbsp;\r\n");
      out.write("					<select id=\"searchType\" name=\"searchType\" style=\"height: 30px;\">\r\n");
      out.write("						<option value=\"\">검색대상선택</option>\r\n");
      out.write("						<option value=\"subject\">제목</option>\r\n");
      out.write("						<option value=\"content\">내용</option>\r\n");
      out.write("						<option value=\"joinuser\">공유자</option>\r\n");
      out.write("					</select>&nbsp;&nbsp;	\r\n");
      out.write("					<input type=\"text\" id=\"searchWord\" value=\"\" style=\"height: 30px; width:150px;\" name=\"searchWord\"/>\r\n");
      out.write("					&nbsp;&nbsp;\r\n");
      out.write("					<select id=\"sizePerPage\" name=\"sizePerPage\" style=\"height: 30px;\">\r\n");
      out.write("						<option value=\"\">보여줄개수</option>\r\n");
      out.write("						<option value=\"10\">10</option>\r\n");
      out.write("						<option value=\"15\">15</option>\r\n");
      out.write("						<option value=\"20\">20</option>\r\n");
      out.write("					</select>&nbsp;&nbsp;\r\n");
      out.write("					<input type=\"hidden\" name=\"fk_userid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>\r\n");
      out.write("					<button type=\"button\" class=\"btn_normal\" style=\"display: inline-block;\" onclick=\"goSearch()\">검색</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("				\r\n");
      out.write("	    ");
      out.write("\r\n");
      out.write("		<div id=\"calendar\" style=\"margin: 100px 0 50px 0;\" ></div>\r\n");
      out.write("	</div>\r\n");
      out.write("		\r\n");
      out.write("</div> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"modal_addComCal\" role=\"dialog\" data-backdrop=\"static\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("    \r\n");
      out.write("      <!-- Modal header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">사내 캘린더 추가</h4>\r\n");
      out.write("        <button type=\"button\" class=\"close modal_close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("       	<form name=\"modal_frm\">\r\n");
      out.write("       	<table style=\"width: 100%;\" class=\"table table-bordered\">\r\n");
      out.write("     			<tr>\r\n");
      out.write("     				<td style=\"text-align: left; \">소분류명</td>\r\n");
      out.write("     				<td><input type=\"text\" class=\"add_com_smcatgoname\"/></td>\r\n");
      out.write("     			</tr>\r\n");
      out.write("     			<tr>\r\n");
      out.write("     				<td style=\"text-align: left;\">만든이</td>\r\n");
      out.write("     				<td style=\"text-align: left; padding-left: 5px;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("     			</tr>\r\n");
      out.write("     		</table>\r\n");
      out.write("       	</form>	\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("      	<button type=\"button\" id=\"addCom\" class=\"btn btn-success btn-sm\" onclick=\"goAddComCal()\">추가</button>\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-danger btn-sm modal_close\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"modal_editComCal\" role=\"dialog\" data-backdrop=\"static\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("    \r\n");
      out.write("      <!-- Modal header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">사내 캘린더 수정</h4>\r\n");
      out.write("        <button type=\"button\" class=\"close modal_close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("       	<form name=\"modal_frm\">\r\n");
      out.write("       	<table style=\"width: 100%;\" class=\"table table-bordered\">\r\n");
      out.write("     			<tr>\r\n");
      out.write("     				<td style=\"text-align: left; \">소분류명</td>\r\n");
      out.write("     				<td><input type=\"text\" class=\"edit_com_smcatgoname\"/><input type=\"hidden\" value=\"\" class=\"edit_com_smcatgono\"></td>\r\n");
      out.write("     			</tr>\r\n");
      out.write("     			<tr>\r\n");
      out.write("     				<td style=\"text-align: left;\">만든이</td>\r\n");
      out.write("     				<td style=\"text-align: left; padding-left: 5px;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("     			</tr>\r\n");
      out.write("     		</table>\r\n");
      out.write("       	</form>	\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("      	<button type=\"button\" id=\"addCom\" class=\"btn btn-success btn-sm\" onclick=\"goEditComCal()\">수정</button>\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-danger btn-sm modal_close\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"modal_addMyCal\" role=\"dialog\" data-backdrop=\"static\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">내 캘린더 추가</h4>\r\n");
      out.write("        <button type=\"button\" class=\"close modal_close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("          <form name=\"modal_frm\">\r\n");
      out.write("       	<table style=\"width: 100%;\" class=\"table table-bordered\">\r\n");
      out.write("     			<tr>\r\n");
      out.write("     				<td style=\"text-align: left; \">소분류명</td>\r\n");
      out.write("     				<td><input type=\"text\" class=\"add_my_smcatgoname\" /></td>\r\n");
      out.write("     			</tr>\r\n");
      out.write("     			<tr>\r\n");
      out.write("     				<td style=\"text-align: left;\">만든이</td>\r\n");
      out.write("     				<td style=\"text-align: left; padding-left: 5px;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td> \r\n");
      out.write("     			</tr>\r\n");
      out.write("     		</table>\r\n");
      out.write("     		</form>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("      	<button type=\"button\" id=\"addMy\" class=\"btn btn-success btn-sm\" onclick=\"goAddMyCal()\">추가</button>\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-danger btn-sm modal_close\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"modal_editMyCal\" role=\"dialog\" data-backdrop=\"static\">\r\n");
      out.write("  <div class=\"modal-dialog\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("    \r\n");
      out.write("      <!-- Modal header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">내 캘린더 수정</h4>\r\n");
      out.write("        <button type=\"button\" class=\"close modal_close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("      	<form name=\"modal_frm\">\r\n");
      out.write("       	<table style=\"width: 100%;\" class=\"table table-bordered\">\r\n");
      out.write("     			<tr>\r\n");
      out.write("     				<td style=\"text-align: left; \">소분류명</td>\r\n");
      out.write("     				<td><input type=\"text\" class=\"edit_my_smcatgoname\"/><input type=\"hidden\" value=\"\" class=\"edit_my_smcatgono\"></td>\r\n");
      out.write("     			</tr>\r\n");
      out.write("     			<tr>\r\n");
      out.write("     				<td style=\"text-align: left;\">만든이</td>\r\n");
      out.write("     				<td style=\"text-align: left; padding-left: 5px;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("     			</tr>\r\n");
      out.write("     		</table>\r\n");
      out.write("       	</form>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("      	<button type=\"button\" id=\"addCom\" class=\"btn btn-success btn-sm\" onclick=\"goEditMyCal()\">수정</button>\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-danger btn-sm modal_close\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("     \r\n");
      out.write("<form name=\"dateFrm\">\r\n");
      out.write("	<input type=\"hidden\" name=\"chooseDate\" />	\r\n");
      out.write("</form>	\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/tiles1/schedule/scheduleManagement.jsp(710,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.loginuser.gradelevel =='10'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" \r\n");
          out.write("		 	<button class=\"btn_edit\" style=\"float: right;\" onclick=\"addComCalendar()\"><i class='fas'>&#xf055;</i></button>\r\n");
          out.write("		 ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
