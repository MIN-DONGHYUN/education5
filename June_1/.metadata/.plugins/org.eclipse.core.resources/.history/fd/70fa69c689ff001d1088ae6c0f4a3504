<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="watchamin">

	<!-- 평점 순위  -->
	<select id="starRank" resultType="com.spring.watcha.common.MovieVO">
		 <![CDATA[
		    SELECT  movie_id, movie_title, original_language, release_date, poster_path, rating_count, rating_avg
			FROM (
			  SELECT ROWNUM, movie_id, movie_title, original_language, CONCAT('20', release_date) AS release_date, poster_path, rating_count, rating_avg
			  FROM Movie
			  
			) 
			WHERE ROWNUM <= 30
			ORDER BY rating_avg desc, movie_title asc
		  ]]>
	</select>
	
	<!-- FROM Movie 뒤에 where rating_count > 9  사용하면 됨 -->
	
	<!-- 보고싶어요 순위  -->
	<select id="seeRank" resultType="com.spring.watcha.common.MovieVO">
		 <![CDATA[
		 SELECT m.movie_id, m.movie_title, m.original_language, m.release_date, m.poster_path, m.rating_avg, w.movie_count
		 FROM (
		   SELECT movie_id, movie_title, original_language, CONCAT('20', release_date) AS release_date, poster_path, rating_avg
		   FROM Movie
		 ) m
		 JOIN (
		   SELECT movie_id, COUNT(*) AS movie_count
		   FROM watch_list
		   GROUP BY movie_id
		 ) w
		 ON m.movie_id = w.movie_id
		 where ROWNUM <= 30
		 ORDER BY w.movie_count DESC
		 ]]>
	</select>
	
	
	<!-- 한줄평 많은 순위 20개  -->
	<select id="commentRank" resultType="com.spring.watcha.common.MovieVO">
		<![CDATA[
		SELECT m.movie_id, m.movie_title, m.original_language, m.release_date, m.poster_path, m.rating_avg, w.movie_count
		FROM (
		  SELECT movie_id, movie_title, original_language, CONCAT('20', release_date) AS release_date, poster_path, rating_avg
		  FROM Movie
		) m
		JOIN (
		  SELECT movie_id, COUNT(*) AS movie_count
		  FROM movie_review
		  GROUP BY movie_id
		) w
		ON m.movie_id = w.movie_id
		where ROWNUM <= 20
		ORDER BY w.movie_count DESC
		]]>
	</select>
	
	
	<resultMap id="movieResultMap" type="com.spring.watcha.model.MovieVO">
       <id property="movieId" column="movie_id" />
       <result property="movieTitle" column="movie_title"/>
       <result property="overview" column="overview"/>
       <result property="originalLanguage" column="original_language"/>
       <result property="originalTitle" column="original_title"/>
       <result property="releaseDate" column="release_date"/>
       <result property="tagline" column="tagline"/>
       <result property="runtime" column="runtime"/>
       <result property="posterPath" column="poster_path"/>
       <result property="backdropPath" column="backdrop_path"/>
       <result property="ratingCount" column="rating_count"/>
       <result property="ratingAvg" column="rating_avg"/>
       <collection property="moviestar" javaType="java.util.List" column="movie_id" ofType="com.spring.watcha.model.Star_ratingVO" select="selectMainStar" />
   </resultMap>
	
	
	<!-- 좋아하는 배우 영화  -->
	<select id="actorRank" resultMap="movieMainMap" > 
		SELECT m.movie_id, a.actor_id, COUNT(*) OVER (PARTITION BY a.actor_id) AS identical_actor_count, a.casting_order, b.actor_name
	    FROM (
	        SELECT movie_id, user_id, rating, rating_date
	        FROM star_rating
	        WHERE user_id = 'qwer1234'
	    ) w
	    JOIN (
	        SELECT movie_id, movie_title, original_language, CONCAT('20', release_date) AS release_date, poster_path, rating_avg
	        FROM Movie
	    ) m ON w.movie_id = m.movie_id
	    JOIN (
	        SELECT actor_id, movie_id, casting_order
	        FROM movie_role
	    ) a ON a.movie_id = m.movie_id
	    JOIN (
	        SELECT actor_id, actor_name
	        FROM actor
	    ) b ON b.actor_id = a.actor_id
	    ORDER BY identical_actor_count DESC, a.casting_order ASC
	    FETCH FIRST ROW ONLY
	</select>
	
	
	
   
   <resultMap id="genreResultMap" type="com.spring.watcha.model.GenreVO">
       <id property="genreId" column="genre_id" />
       <result property="genreName" column="genre_name" />
   </resultMap>
   
   <resultMap id="movieRoleResultMap" type="com.spring.watcha.model.MovieRoleVO">
       <!-- <id property="movieId" column="movie_id" />
       <id property="actorId" column="actor_id" /> -->
       <result property="role" column="role"/>
       <result property="castingOrder" column="casting_order"/>
       <association property="actor" javaType="com.spring.watcha.model.ActorVO" resultMap="actorResultMap" />
   </resultMap>
   
   <resultMap id="actorResultMap" type="com.spring.watcha.model.ActorVO">
       <id property="actorId" column="actor_id" />
       <result property="actorName" column="actor_name"/>
       <result property="gender" column="gender"/>
       <result property="dateOfBirth" column="date_of_birth"/>
       <result property="placeOfBirth" column="place_of_birth"/>
       <result property="profileImagePath" column="profile_image_path"/>
   </resultMap>
   

   <select id="getMovieDetails" resultMap="movieResultMap" parameterType="String">
       SELECT movie_id, movie_title, overview, original_language, original_title, to_char(release_date, 'yyyy-mm-dd') as release_date, tagline, to_number(runtime) as runtime, poster_path, backdrop_path, to_number(rating_count) as rating_count
       , to_number(rating_avg) as rating_avg
       FROM movie
       WHERE movie_id = #{movieId}
   </select>
   
   <select id="selectGenresByMovieId" resultMap="genreResultMap">
       SELECT MG.movie_id, G.genre_id, G.genre_name
       FROM genre G
       JOIN movie_genre MG ON G.genre_id = MG.genre_id
       WHERE MG.movie_id = #{movieId}
   </select>
   
   <select id="selectMovieRolesByMovieId" resultMap="movieRoleResultMap">
       SELECT MR.movie_id, MR.actor_id, MR.role, MR.CASTING_ORDER, A.actor_name, A.gender, A.date_of_birth, A.place_of_birth, A.profile_image_path
       FROM movie_role MR
       JOIN actor A ON MR.actor_id = A.actor_id
       WHERE MR.movie_id = #{movieId}
   </select>
				    
</mapper>