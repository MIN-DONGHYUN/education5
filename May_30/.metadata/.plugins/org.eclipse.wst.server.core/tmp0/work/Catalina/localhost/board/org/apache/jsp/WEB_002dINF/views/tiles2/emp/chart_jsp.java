/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.72
 * Generated at: 2023-05-30 04:54:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.tiles2.emp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 String ctxPath = request.getContextPath(); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("	.highcharts-figure,\r\n");
      out.write("	.highcharts-data-table table {\r\n");
      out.write("	    min-width: 320px;\r\n");
      out.write("	    max-width: 800px;\r\n");
      out.write("	    margin: 1em auto;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.highcharts-data-table table {\r\n");
      out.write("	    font-family: Verdana, sans-serif;\r\n");
      out.write("	    border-collapse: collapse;\r\n");
      out.write("	    border: 1px solid #ebebeb;\r\n");
      out.write("	    margin: 10px auto;\r\n");
      out.write("	    text-align: center;\r\n");
      out.write("	    width: 100%;\r\n");
      out.write("	    max-width: 500px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.highcharts-data-table caption {\r\n");
      out.write("	    padding: 1em 0;\r\n");
      out.write("	    font-size: 1.2em;\r\n");
      out.write("	    color: #555;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.highcharts-data-table th {\r\n");
      out.write("	    font-weight: 600;\r\n");
      out.write("	    padding: 0.5em;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.highcharts-data-table td,\r\n");
      out.write("	.highcharts-data-table th,\r\n");
      out.write("	.highcharts-data-table caption {\r\n");
      out.write("	    padding: 0.5em;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.highcharts-data-table thead tr,\r\n");
      out.write("	.highcharts-data-table tr:nth-child(even) {\r\n");
      out.write("	    background: #f8f8f8;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.highcharts-data-table tr:hover {\r\n");
      out.write("	    background: #f1f7ff;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	input[type=\"number\"] {\r\n");
      out.write("	    min-width: 50px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("   div#table_container table {width: 100%}\r\n");
      out.write("   div#table_container th, div#table_container td {border: solid 1px gray; text-align: center;} \r\n");
      out.write("   div#table_container th {background-color: #595959; color: white;} \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.print( ctxPath);
      out.write("/resources/Highcharts-10.3.1/code/highcharts.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print( ctxPath);
      out.write("/resources/Highcharts-10.3.1/code/modules/exporting.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print( ctxPath);
      out.write("/resources/Highcharts-10.3.1/code/modules/export-data.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print( ctxPath);
      out.write("/resources/Highcharts-10.3.1/code/modules/accessibility.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.print( ctxPath);
      out.write("/resources/Highcharts-10.3.1/code/modules/series-label.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.print( ctxPath);
      out.write("/resources/Highcharts-10.3.1/code/modules/data.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print( ctxPath);
      out.write("/resources/Highcharts-10.3.1/code/modules/drilldown.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div style=\"display: flex;\">   \r\n");
      out.write("<div style=\"width: 80%; min-height: 1100px; margin:auto; \">\r\n");
      out.write("\r\n");
      out.write("   <h2 style=\"margin: 50px 0;\">HR 사원 통계정보(차트)</h2>\r\n");
      out.write("   \r\n");
      out.write("   <form name=\"searchFrm\" style=\"margin: 20px 0 50px 0; \">\r\n");
      out.write("      <select name=\"searchType\" id=\"searchType\" style=\"height: 30px;\">\r\n");
      out.write("         <option value=\"\">통계선택하세요</option>\r\n");
      out.write("         <option value=\"deptname\">부서별 인원통계</option>\r\n");
      out.write("         <option value=\"gender\">성별 인원통계</option>\r\n");
      out.write("         <option value=\"genderHireYear\">성별 입사년도별 통계</option>\r\n");
      out.write("         <option value=\"deptnameGender\">부서별 성별 인원통계</option>\r\n");
      out.write("      </select>\r\n");
      out.write("   </form>\r\n");
      out.write("   \r\n");
      out.write("   <div id=\"chart_container\"></div>\r\n");
      out.write("   <div id=\"table_container\" style=\"margin: 40px 0 0 0;\"></div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		\r\n");
      out.write("		// select 의 값이 변경되면 실행해라 \r\n");
      out.write("		$(\"select#searchType\").change(function(){\r\n");
      out.write("			func_choice($(this).val());   // 고른 select 의 val을 넣음\r\n");
      out.write("			// $(this).val() 은 \"\" 또는 \"deptname\" 또는 \"gender\" 또는 \"genderHireYear\" 또는 \"deptnameGender\" 이다.\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	// Function Declaration\r\n");
      out.write("	function func_choice(searchTypeVal) {\r\n");
      out.write("		\r\n");
      out.write("		switch (searchTypeVal) {\r\n");
      out.write("		case \"\":    // 통계선택하세요 를 선택한 경우 \r\n");
      out.write("			$(\"div#chart_container\").empty();    // 초기화 하기 \r\n");
      out.write("			$(\"div#table_container\").empty();    // 초기화 하기 \r\n");
      out.write("			$(\"div.highcharts-data-table\").empty();    // 초기화 하기 (view data table 누른것을 안보이게)\r\n");
      out.write("			\r\n");
      out.write("			break;\r\n");
      out.write("			\r\n");
      out.write("		case \"deptname\":     // 부서별 인원통계 를 선택한 경우   \r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:\"");
      out.print( ctxPath);
      out.write("/chart/employeeCntByDeptname.action\",\r\n");
      out.write("				dataType: \"json\",\r\n");
      out.write("				success:function(json){\r\n");
      out.write("					//console.log(JSON.stringify(json));\r\n");
      out.write("					/*\r\n");
      out.write("						[{\"department_name\":\"Shipping\",\"cnt\":\"45\",\"percentage\":\"40.54\"}\r\n");
      out.write("						,{\"department_name\":\"Sales\",\"cnt\":\"34\",\"percentage\":\"30.63\"}\r\n");
      out.write("						,{\"department_name\":\"IT\",\"cnt\":\"9\",\"percentage\":\"8.11\"}\r\n");
      out.write("						,{\"department_name\":\"Finance\",\"cnt\":\"6\",\"percentage\":\"5.41\"}\r\n");
      out.write("						,{\"department_name\":\"Purchasing\",\"cnt\":\"6\",\"percentage\":\"5.41\"}\r\n");
      out.write("						,{\"department_name\":\"Executive\",\"cnt\":\"3\",\"percentage\":\"2.7\"}\r\n");
      out.write("						,{\"department_name\":\"Accounting\",\"cnt\":\"2\",\"percentage\":\"1.8\"}\r\n");
      out.write("						,{\"department_name\":\"Marketing\",\"cnt\":\"2\",\"percentage\":\"1.8\"}\r\n");
      out.write("						,{\"department_name\":\"Administration\",\"cnt\":\"1\",\"percentage\":\"0.9\"}\r\n");
      out.write("						,{\"department_name\":\"Human Resources\",\"cnt\":\"1\",\"percentage\":\"0.9\"}\r\n");
      out.write("						,{\"department_name\":\"Public Relations\",\"cnt\":\"1\",\"percentage\":\"0.9\"}\r\n");
      out.write("						,{\"department_name\":\"부서없음\",\"cnt\":\"1\",\"percentage\":\"0.9\"}]\r\n");
      out.write("					*/\r\n");
      out.write("					\r\n");
      out.write("					$(\"div#chart_container\").empty();    // 초기화 하기 \r\n");
      out.write("					$(\"div#table_container\").empty();    // 초기화 하기 \r\n");
      out.write("					$(\"div.highcharts-data-table\").empty();    // 초기화 하기 (view data table 누른것을 안보이게)\r\n");
      out.write("					\r\n");
      out.write("					let resultArr = [];  // 배열로 만들기 위해 \r\n");
      out.write("					\r\n");
      out.write("					for(let i=0; i< json.length; i++){\r\n");
      out.write("						let obj;\r\n");
      out.write("						\r\n");
      out.write("						if(i==0){\r\n");
      out.write("							obj = {name : json[i].department_name\r\n");
      out.write("									     ,y : Number(json[i].percentage)\r\n");
      out.write("									     ,sliced: true\r\n");
      out.write("									     ,selected: true};    // 자바스크립트의 객체\r\n");
      out.write("						}\r\n");
      out.write("						else{\r\n");
      out.write("							obj = {name : json[i].department_name\r\n");
      out.write("								  ,y : Number(json[i].percentage)};    // 자바스크립트의 객체\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("						resultArr.push(obj);   //obj 를 push 한다. 값이 쌓인다\r\n");
      out.write("						\r\n");
      out.write("					}// end of for \r\n");
      out.write("					\r\n");
      out.write("					///////////////////////차트그리기 부분 //////////////////////////// \r\n");
      out.write("					Highcharts.chart('chart_container', {\r\n");
      out.write("					    chart: {\r\n");
      out.write("					        plotBackgroundColor: null,\r\n");
      out.write("					        plotBorderWidth: null,\r\n");
      out.write("					        plotShadow: false,\r\n");
      out.write("					        type: 'pie'\r\n");
      out.write("					    },\r\n");
      out.write("					    title: {\r\n");
      out.write("					        text: '우리회사 부서별 인원통계',\r\n");
      out.write("					        align: 'center'\r\n");
      out.write("					    },\r\n");
      out.write("					    tooltip: {\r\n");
      out.write("					        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n");
      out.write("					    },\r\n");
      out.write("					    accessibility: {\r\n");
      out.write("					        point: {\r\n");
      out.write("					            valueSuffix: '%'\r\n");
      out.write("					        }\r\n");
      out.write("					    },\r\n");
      out.write("					    plotOptions: {\r\n");
      out.write("					        pie: {\r\n");
      out.write("					            allowPointSelect: true,\r\n");
      out.write("					            cursor: 'pointer',\r\n");
      out.write("					            dataLabels: {\r\n");
      out.write("					                enabled: true,\r\n");
      out.write("					                format: '<b>{point.name}</b>: {point.percentage:.2f} %'  /* 1f는 소수부 첫쩨자리, 2f는 소수부 줄째자리  */\r\n");
      out.write("					            }\r\n");
      out.write("					        }\r\n");
      out.write("					    }, \r\n");
      out.write("					    series: [{\r\n");
      out.write("					        name: '인원비율',\r\n");
      out.write("					        colorByPoint: true,\r\n");
      out.write("					        data: resultArr\r\n");
      out.write("					    }]\r\n");
      out.write("					}); \r\n");
      out.write("					///////////////////////////////////////////////////\r\n");
      out.write("					\r\n");
      out.write("					let html =  \"<table>\";\r\n");
      out.write("					    html += \"<tr>\" +\r\n");
      out.write("					    		   \"<th>부서명</th>\"  +\r\n");
      out.write("					    		   \"<th>인원수</th>\"  +\r\n");
      out.write("					    		   \"<th>퍼센티지</th>\"  +\r\n");
      out.write("					    		\"</tr>\";\r\n");
      out.write("					   \r\n");
      out.write("					 $.each(json, function(index, item){\r\n");
      out.write("						 html += \"<tr>\" +\r\n");
      out.write("						              \"<td>\" + item.department_name + \"</td>\" +\r\n");
      out.write("						              \"<td>\" + item.cnt + \"</td>\" +\r\n");
      out.write("						              \"<td>\" + Number(item.percentage) + \"</td>\" +\r\n");
      out.write("						         \"</tr>\";     \r\n");
      out.write("\r\n");
      out.write("					 });\r\n");
      out.write("					 \r\n");
      out.write("					 html += \"</table>\";\r\n");
      out.write("					 \r\n");
      out.write("					 $(\"div#table_container\").html(html);   // html 출력\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error: function(request, status, error){\r\n");
      out.write("	                alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("	             }\r\n");
      out.write("			});\r\n");
      out.write("				\r\n");
      out.write("			break;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		case \"gender\":    // 성별 인원통계 를 선택한 경우 \r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:\"");
      out.print( ctxPath);
      out.write("/chart/employeeCntByGender.action\",\r\n");
      out.write("				dataType: \"json\",\r\n");
      out.write("				success:function(json){\r\n");
      out.write("					//console.log(JSON.stringify(json));\r\n");
      out.write("					/*\r\n");
      out.write("						[{\"gender\":\"남\",\"cnt\":\"58\",\"percentage\":\"52.25\"}\r\n");
      out.write("						,{\"gender\":\"여\",\"cnt\":\"53\",\"percentage\":\"47.75\"}]\r\n");
      out.write("					*/\r\n");
      out.write("					\r\n");
      out.write("					$(\"div#chart_container\").empty();    // 초기화 하기 \r\n");
      out.write("					$(\"div#table_container\").empty();    // 초기화 하기 \r\n");
      out.write("					$(\"div.highcharts-data-table\").empty();    // 초기화 하기 (view data table 누른것을 안보이게)\r\n");
      out.write("					\r\n");
      out.write("					let resultArr = [];  // 배열로 만들기 위해 \r\n");
      out.write("					\r\n");
      out.write("					for(let i=0; i< json.length; i++){\r\n");
      out.write("						let obj;\r\n");
      out.write("						\r\n");
      out.write("						if(i==0){\r\n");
      out.write("							obj = {name : json[i].gender\r\n");
      out.write("									     ,y : Number(json[i].percentage)\r\n");
      out.write("									     ,sliced: true\r\n");
      out.write("									     ,selected: true};    // 자바스크립트의 객체\r\n");
      out.write("						}\r\n");
      out.write("						else{\r\n");
      out.write("							obj = {name : json[i].gender\r\n");
      out.write("								  ,y : Number(json[i].percentage)};    // 자바스크립트의 객체\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("						resultArr.push(obj);   //obj 를 push 한다. 값이 쌓인다\r\n");
      out.write("						\r\n");
      out.write("					}// end of for \r\n");
      out.write("					\r\n");
      out.write("					///////////////////////차트그리기 부분 //////////////////////////// \r\n");
      out.write("					Highcharts.chart('chart_container', {\r\n");
      out.write("					    chart: {\r\n");
      out.write("					        plotBackgroundColor: null,\r\n");
      out.write("					        plotBorderWidth: null,\r\n");
      out.write("					        plotShadow: false,\r\n");
      out.write("					        type: 'pie'\r\n");
      out.write("					    },\r\n");
      out.write("					    title: {\r\n");
      out.write("					        text: '우리회사 성별 인원통계',\r\n");
      out.write("					        align: 'center'\r\n");
      out.write("					    },\r\n");
      out.write("					    tooltip: {\r\n");
      out.write("					        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n");
      out.write("					    },\r\n");
      out.write("					    accessibility: {\r\n");
      out.write("					        point: {\r\n");
      out.write("					            valueSuffix: '%'\r\n");
      out.write("					        }\r\n");
      out.write("					    },\r\n");
      out.write("					    plotOptions: {\r\n");
      out.write("					        pie: {\r\n");
      out.write("					            allowPointSelect: true,\r\n");
      out.write("					            cursor: 'pointer',\r\n");
      out.write("					            dataLabels: {\r\n");
      out.write("					                enabled: true,\r\n");
      out.write("					                format: '<b>{point.name}</b>: {point.percentage:.2f} %'  /* 1f는 소수부 첫쩨자리, 2f는 소수부 줄째자리  */\r\n");
      out.write("					            }\r\n");
      out.write("					        }\r\n");
      out.write("					    }, \r\n");
      out.write("					    series: [{\r\n");
      out.write("					        name: '인원비율',\r\n");
      out.write("					        colorByPoint: true,\r\n");
      out.write("					        data: resultArr\r\n");
      out.write("					    }]\r\n");
      out.write("					}); \r\n");
      out.write("					///////////////////////////////////////////////////\r\n");
      out.write("					\r\n");
      out.write("					let html =  \"<table>\";\r\n");
      out.write("					    html += \"<tr>\" +\r\n");
      out.write("					    		   \"<th>성별</th>\"  +\r\n");
      out.write("					    		   \"<th>인원수</th>\"  +\r\n");
      out.write("					    		   \"<th>퍼센티지</th>\"  +\r\n");
      out.write("					    		\"</tr>\";\r\n");
      out.write("					   \r\n");
      out.write("					 $.each(json, function(index, item){\r\n");
      out.write("						 html += \"<tr>\" +\r\n");
      out.write("						              \"<td>\" + item.gender + \"</td>\" +\r\n");
      out.write("						              \"<td>\" + item.cnt + \"</td>\" +\r\n");
      out.write("						              \"<td>\" + Number(item.percentage) + \"</td>\" +\r\n");
      out.write("						         \"</tr>\";     \r\n");
      out.write("\r\n");
      out.write("					 });\r\n");
      out.write("					 \r\n");
      out.write("					 html += \"</table>\";\r\n");
      out.write("					 \r\n");
      out.write("					 $(\"div#table_container\").html(html);   // html 출력\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error: function(request, status, error){\r\n");
      out.write("	                alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("	             }\r\n");
      out.write("			});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("			break;\r\n");
      out.write("		\r\n");
      out.write("					\r\n");
      out.write("		case \"genderHireYear\":    // 성별 입사년도별 통계 를 선택한 경우 \r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:\"");
      out.print( ctxPath);
      out.write("/chart/employeeCntByGenderHireYear.action\",\r\n");
      out.write("				dataType: \"json\",\r\n");
      out.write("				success:function(json){\r\n");
      out.write("					//console.log(JSON.stringify(json));\r\n");
      out.write("					/*\r\n");
      out.write("						[{\"gender\":\"남\",\"Y2001\":\"0\",\"Y2002\":\"2\",\"Y2003\":\"4\",\"Y2004\":\"4\",\"Y2005\":\"15\",\"Y2006\":\"17\",\"Y2007\":\"8\",\"Y2008\":\"6\"}\r\n");
      out.write("						,{\"gender\":\"여\",\"Y2001\":\"1\",\"Y2002\":\"5\",\"Y2003\":\"2\",\"Y2004\":\"6\",\"Y2005\":\"14\",\"Y2006\":\"7\",\"Y2007\":\"11\",\"Y2008\":\"5\"}]\r\n");
      out.write("					*/\r\n");
      out.write("					\r\n");
      out.write("					$(\"div#chart_container\").empty();    // 초기화 하기 \r\n");
      out.write("					$(\"div#table_container\").empty();    // 초기화 하기 \r\n");
      out.write("					$(\"div.highcharts-data-table\").empty();    // 초기화 하기 (view data table 누른것을 안보이게)\r\n");
      out.write("					\r\n");
      out.write("					let resultArr = [];  // 배열로 시작 \r\n");
      out.write("					\r\n");
      out.write("					for(let i = 0; i < json.length; i++) {   //남, 여 두번 만 반복\r\n");
      out.write("						let hireYear_arr = [];\r\n");
      out.write("						hireYear_arr.push(Number(json[i].Y2001));\r\n");
      out.write("						hireYear_arr.push(Number(json[i].Y2002));\r\n");
      out.write("						hireYear_arr.push(Number(json[i].Y2003));\r\n");
      out.write("						hireYear_arr.push(Number(json[i].Y2004));\r\n");
      out.write("						hireYear_arr.push(Number(json[i].Y2005));\r\n");
      out.write("						hireYear_arr.push(Number(json[i].Y2006));\r\n");
      out.write("						hireYear_arr.push(Number(json[i].Y2007));\r\n");
      out.write("						hireYear_arr.push(Number(json[i].Y2008));\r\n");
      out.write("						\r\n");
      out.write("						let obj = {name: json[i].gender ,\r\n");
      out.write("					               data: hireYear_arr};\r\n");
      out.write("						\r\n");
      out.write("						resultArr.push(obj);    // 배열속에 객체를 넣기 \r\n");
      out.write("					\r\n");
      out.write("					}// end of for \r\n");
      out.write("					\r\n");
      out.write("					Highcharts.chart('chart_container', {\r\n");
      out.write("\r\n");
      out.write("					    title: {\r\n");
      out.write("					        text: '2001년 ~ 2008년 우리회사 성별 입사년도별 입사 인원수'\r\n");
      out.write("					    },\r\n");
      out.write("\r\n");
      out.write("					    subtitle: {\r\n");
      out.write("					        text: 'Source: <a href=\"http://localhost:9090/board/emp/empList.action\" target=\"_blank\">HR.employees</a>'\r\n");
      out.write("					    },\r\n");
      out.write("\r\n");
      out.write("					    yAxis: {\r\n");
      out.write("					        title: {\r\n");
      out.write("					            text: '입사 인원수'\r\n");
      out.write("					        }\r\n");
      out.write("					    },\r\n");
      out.write("\r\n");
      out.write("					    xAxis: {\r\n");
      out.write("					        accessibility: {\r\n");
      out.write("					            rangeDescription: '범위: 2001 to 2008'\r\n");
      out.write("					        }\r\n");
      out.write("					    },\r\n");
      out.write("\r\n");
      out.write("					    legend: {\r\n");
      out.write("					        layout: 'vertical',\r\n");
      out.write("					        align: 'right',\r\n");
      out.write("					        verticalAlign: 'middle'\r\n");
      out.write("					    },\r\n");
      out.write("\r\n");
      out.write("					    plotOptions: {\r\n");
      out.write("					        series: {\r\n");
      out.write("					            label: {\r\n");
      out.write("					                connectorAllowed: false\r\n");
      out.write("					            },\r\n");
      out.write("					            pointStart: 2001\r\n");
      out.write("					        }\r\n");
      out.write("					    },\r\n");
      out.write("\r\n");
      out.write("					    series: resultArr,\r\n");
      out.write("\r\n");
      out.write("					    responsive: {\r\n");
      out.write("					        rules: [{\r\n");
      out.write("					            condition: {\r\n");
      out.write("					                maxWidth: 500\r\n");
      out.write("					            },\r\n");
      out.write("					            chartOptions: {\r\n");
      out.write("					                legend: {\r\n");
      out.write("					                    layout: 'horizontal',\r\n");
      out.write("					                    align: 'center',\r\n");
      out.write("					                    verticalAlign: 'bottom'\r\n");
      out.write("					                }\r\n");
      out.write("					            }\r\n");
      out.write("					        }]\r\n");
      out.write("					    }\r\n");
      out.write("\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					//////////////////////////////////////////////////////////\r\n");
      out.write("					\r\n");
      out.write("					let html =  \"<table>\";\r\n");
      out.write("                    html += \"<tr>\" +\r\n");
      out.write("                              \"<th>성별</th>\" +\r\n");
      out.write("                              \"<th>2001년</th>\" +\r\n");
      out.write("                              \"<th>2002년</th>\" +\r\n");
      out.write("                              \"<th>2003년</th>\" +\r\n");
      out.write("                              \"<th>2004년</th>\" +\r\n");
      out.write("                              \"<th>2005년</th>\" +\r\n");
      out.write("                              \"<th>2006년</th>\" +\r\n");
      out.write("                              \"<th>2007년</th>\" +\r\n");
      out.write("                              \"<th>2008년</th>\" +\r\n");
      out.write("                            \"</tr>\";\r\n");
      out.write("           \r\n");
      out.write("	                $.each(json, function(index, item){\r\n");
      out.write("	                   html += \"<tr>\" +\r\n");
      out.write("	                               \"<td>\"+ item.gender +\"</td>\" +\r\n");
      out.write("	                               \"<td>\"+ item.Y2001 +\"</td>\" +\r\n");
      out.write("	                               \"<td>\"+ item.Y2002 +\"</td>\" +\r\n");
      out.write("	                               \"<td>\"+ item.Y2003 +\"</td>\" +\r\n");
      out.write("	                               \"<td>\"+ item.Y2004 +\"</td>\" +\r\n");
      out.write("	                               \"<td>\"+ item.Y2005 +\"</td>\" +\r\n");
      out.write("	                               \"<td>\"+ item.Y2006 +\"</td>\" +\r\n");
      out.write("	                               \"<td>\"+ item.Y2007 +\"</td>\" +\r\n");
      out.write("	                               \"<td>\"+ item.Y2008 +\"</td>\" +\r\n");
      out.write("	                           \"</tr>\";\r\n");
      out.write("	                });        \r\n");
      out.write("	                        \r\n");
      out.write("	                html += \"</table>\";\r\n");
      out.write("	                \r\n");
      out.write("	                $(\"div#table_container\").html(html);\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error: function(request, status, error){\r\n");
      out.write("	                alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("	             }\r\n");
      out.write("			});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("			break;\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("		case \"deptnameGender\":    // 부서별 성별 인원통계를 선택한 경우 \r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url:\"");
      out.print( ctxPath);
      out.write("/chart/employeeCntByDeptname.action\",\r\n");
      out.write("				dataType:\"json\",\r\n");
      out.write("				success:function(json1){\r\n");
      out.write("					\r\n");
      out.write("					//console.log(JSON.stringify(json1));\r\n");
      out.write("					/*\r\n");
      out.write("						[{\"department_name\":\"Shipping\",\"cnt\":\"45\",\"percentage\":\"40.54\"}\r\n");
      out.write("						,{\"department_name\":\"Sales\",\"cnt\":\"34\",\"percentage\":\"30.63\"}\r\n");
      out.write("						,{\"department_name\":\"IT\",\"cnt\":\"9\",\"percentage\":\"8.11\"}\r\n");
      out.write("						,{\"department_name\":\"Finance\",\"cnt\":\"6\",\"percentage\":\"5.41\"}\r\n");
      out.write("						,{\"department_name\":\"Purchasing\",\"cnt\":\"6\",\"percentage\":\"5.41\"}\r\n");
      out.write("						,{\"department_name\":\"Executive\",\"cnt\":\"3\",\"percentage\":\"2.7\"}\r\n");
      out.write("						,{\"department_name\":\"Accounting\",\"cnt\":\"2\",\"percentage\":\"1.8\"}\r\n");
      out.write("						,{\"department_name\":\"Marketing\",\"cnt\":\"2\",\"percentage\":\"1.8\"}\r\n");
      out.write("						,{\"department_name\":\"Administration\",\"cnt\":\"1\",\"percentage\":\"0.9\"}\r\n");
      out.write("						,{\"department_name\":\"Human Resources\",\"cnt\":\"1\",\"percentage\":\"0.9\"}\r\n");
      out.write("						,{\"department_name\":\"Public Relations\",\"cnt\":\"1\",\"percentage\":\"0.9\"}\r\n");
      out.write("						,{\"department_name\":\"부서없음\",\"cnt\":\"1\",\"percentage\":\"0.9\"}]\r\n");
      out.write("					*/\r\n");
      out.write("					\r\n");
      out.write("					$(\"div#chart_container\").empty();    // 초기화 하기 \r\n");
      out.write("					$(\"div#table_container\").empty();    // 초기화 하기 \r\n");
      out.write("					$(\"div.highcharts-data-table\").empty();    // 초기화 하기 (view data table 누른것을 안보이게)\r\n");
      out.write("					\r\n");
      out.write("					let deptnameArr = [];  // 부서명별 인원수 퍼센티지 객체 배열\r\n");
      out.write("					\r\n");
      out.write("					// 반복문 \r\n");
      out.write("					$.each(json1, function(index, item){\r\n");
      out.write("						deptnameArr.push({name: item.department_name,\r\n");
      out.write("					                      y: Number(item.percentage),\r\n");
      out.write("					                      drilldown: item.department_name});\r\n");
      out.write("					}); // end of $.each(json, function(index, item)\r\n");
      out.write("						\r\n");
      out.write("							\r\n");
      out.write("					let genderArr = [];	// 특정 부서명에 근무하는 직원들의 성별 인원수 퍼센티지 객체 배열 	 \r\n");
      out.write("							\r\n");
      out.write("					// 반복문 \r\n");
      out.write("					$.each(json1, function(index1, item1){\r\n");
      out.write("						\r\n");
      out.write("						$.ajax({\r\n");
      out.write("							url:\"");
      out.print( ctxPath);
      out.write("/chart/genderCntSpecialDeptname.action\",\r\n");
      out.write("							type:\"get\",\r\n");
      out.write("							data:{\"deptname\":item1.department_name},\r\n");
      out.write("							dataType:\"json\",\r\n");
      out.write("							success:function(json2){\r\n");
      out.write("								\r\n");
      out.write("							  //console.log(JSON.stringify(json2));\r\n");
      out.write("							  /*\r\n");
      out.write("		    				     [{\"gender\":\"남\",\"cnt\":\"4\",\"percentage\":\"3.6\"}\r\n");
      out.write("		    				     ,{\"gender\":\"여\",\"cnt\":\"2\",\"percentage\":\"1.8\"}]\r\n");
      out.write("		    				  */\r\n");
      out.write("								\r\n");
      out.write("								let subArr = [];  // 배열로 사용하기 위해 \r\n");
      out.write("								\r\n");
      out.write("								$.each(json2, function(index2, item2){\r\n");
      out.write("									subArr.push([\r\n");
      out.write("										item2.gender,\r\n");
      out.write("										Number(item2.percentage)\r\n");
      out.write("									]);\r\n");
      out.write("								}); // end of $.each(json2, function(index2, item2)\r\n");
      out.write("								\r\n");
      out.write("								genderArr.push({\r\n");
      out.write("					                \r\n");
      out.write("									name: item1.department_name,\r\n");
      out.write("					                id: item1.department_name,\r\n");
      out.write("					                data: subArr\r\n");
      out.write("								});\r\n");
      out.write("							\r\n");
      out.write("							},\r\n");
      out.write("							error: function(request, status, error){\r\n");
      out.write("				                alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("				            }\r\n");
      out.write("							\r\n");
      out.write("						});\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("					}); // end of $.each(json, function(index1, item1)\r\n");
      out.write("						\r\n");
      out.write("				\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					/////////////////////////////차트에 관련 시작///////////////////////////////////////////\r\n");
      out.write("					\r\n");
      out.write("					Highcharts.chart('chart_container', {\r\n");
      out.write("					    chart: {\r\n");
      out.write("					        type: 'column'\r\n");
      out.write("					    },\r\n");
      out.write("					    title: {\r\n");
      out.write("					        align: 'center',\r\n");
      out.write("					        text: '부서별 남녀 비율'\r\n");
      out.write("					    },\r\n");
      out.write("					    subtitle: {\r\n");
      out.write("					        align: 'left',\r\n");
      out.write("					        text: 'Click the columns to view versions. Source: <a href=\"http://localhost:9090/board/emp/empList.action\" target=\"_blank\">HR.employees</a>'\r\n");
      out.write("					    },\r\n");
      out.write("					    accessibility: {\r\n");
      out.write("					        announceNewData: {\r\n");
      out.write("					            enabled: true\r\n");
      out.write("					        }\r\n");
      out.write("					    },\r\n");
      out.write("					    xAxis: {\r\n");
      out.write("					        type: 'category'\r\n");
      out.write("					    },\r\n");
      out.write("					    yAxis: {\r\n");
      out.write("					        title: {\r\n");
      out.write("					            text: '구성비율(%)'\r\n");
      out.write("					        }\r\n");
      out.write("\r\n");
      out.write("					    },\r\n");
      out.write("					    legend: {\r\n");
      out.write("					        enabled: false\r\n");
      out.write("					    },\r\n");
      out.write("					    plotOptions: {\r\n");
      out.write("					        series: {\r\n");
      out.write("					            borderWidth: 0,\r\n");
      out.write("					            dataLabels: {\r\n");
      out.write("					                enabled: true,\r\n");
      out.write("					                format: '{point.y:.1f}%'\r\n");
      out.write("					            }\r\n");
      out.write("					        }\r\n");
      out.write("					    },\r\n");
      out.write("\r\n");
      out.write("					    tooltip: {\r\n");
      out.write("					        headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n");
      out.write("					        pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'\r\n");
      out.write("					    },\r\n");
      out.write("\r\n");
      out.write("					    series: [\r\n");
      out.write("					        {\r\n");
      out.write("					            name: '부서명',\r\n");
      out.write("					            colorByPoint: true,\r\n");
      out.write("					            data: deptnameArr   // **** 위에서 구한 값을 대입시킴. 부서명별 인원수 퍼센티지 객체 배열  ****\r\n");
      out.write("					        }\r\n");
      out.write("					    ],\r\n");
      out.write("					    drilldown: {\r\n");
      out.write("					        breadcrumbs: {\r\n");
      out.write("					            position: {\r\n");
      out.write("					                align: 'right'\r\n");
      out.write("					            }\r\n");
      out.write("					        },\r\n");
      out.write("					        series: genderArr // **** 위에서 구한 값을 대입시킴. 특정 부서명에 근무하는 직원들의 성별 인원수 퍼센티지 객체 배열  ****\r\n");
      out.write("					            \r\n");
      out.write("					            \r\n");
      out.write("					        \r\n");
      out.write("					    }\r\n");
      out.write("					});\r\n");
      out.write("					//////////////////////////////차트에 관련 끝///////////////////////////////////////\r\n");
      out.write("				},\r\n");
      out.write("				error: function(request, status, error){\r\n");
      out.write("	                alert(\"code: \"+request.status+\"\\n\"+\"message: \"+request.responseText+\"\\n\"+\"error: \"+error);\r\n");
      out.write("	            }\r\n");
      out.write("				\r\n");
      out.write("			}); // end of AJAX\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("			break;\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	}// end of function func_choice(searchTypeVal)....\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
