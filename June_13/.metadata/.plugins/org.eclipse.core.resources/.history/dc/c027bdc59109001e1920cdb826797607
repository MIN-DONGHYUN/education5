spring: # 주의할 점은 내용작성시 들여쓰기 내어쓰기를 반드시 꼭 지켜야 한다. 
  profiles: #실행환경(local(로컬),dev(개발),real(운영))
    active: local 
  
  mvc:
    view: #뷰 리졸버. view 경로 및 확장자 지정하기. JSP를 뷰로 사용한다.  
      prefix: /WEB-INF/views/
      suffix: .jsp
      
  datasource: #DB 접속
    driver-class-name: oracle.jdbc.OracleDriver
   #url: jdbc:oracle:thin:@127.0.0.1:1521:xe
    url: jdbc:oracle:thin:@//127.0.0.1:1521/xe  # oracle 12c 이후부터는 이렇게 하라고 함.
    username: jspbegin_user
    password: gclass
    type: com.zaxxer.hikari.HikariDataSource
    hikari: #커넥션풀 
      #driver-class-name: oracle.jdbc.OracleDriver
      #jdbc-url: jdbc:oracle:thin:@127.0.0.1:1521:xe
      #username: jspbegin_user
      #password: aclass
      connection-timeout : 30000 #클라이언트가 pool에 connection을 요청하는데 기다리는 최대시간을 설정 30초
      maximum-pool-size : 10 #최대 커넥션 개수 설정
      max-lifetime: 1800000  #커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 1,800초(30분)    
      
  jpa:
    hibernate:
      ddl-auto: none  # 테이블이나 시퀀스 자동 생성이다. 테이블이나 시퀀스가 존재하지 않는 경우 최초실행시 에러발생함. 무시해도 됨. 테이블을 생성을 해야할 맨처음에만 create 하고 테이블과 관련된 DDL 작업이 없을 때는 none 으로 변경하자.   
              # create      -> 기존 테이블이나 시퀀스를 drop 한 후 다시 생성한다.                 [개발초기단계]
              # create-drop -> SessionFactory 가 시작될 때 테이블이나 시퀀스를 drop 및 생성한다.  [개발초기단계]
              #                SessionFactory 가 종료될 때 테이블을 테이블이나 시퀀스를 drop 한다. 
              #                in-memory DB인 H2 Database 의 기본값이다. 
              # update      -> 테이블의 내용이 변경된 경우 자동으로 변경된 것만 DDL 을 실행해준다.     [개발초기단계]  
              # validate    -> 엔티티와 테이블이 정상 매핑되었는지만 확인.                         [개발초기단계] 또는 [테스터서버]
              # none        -> 아무것도 실행하지 않는다.                                       [배포운영단계]          
              # !!!! 실제 배포운영시에는 ddl-auto: none 으로만 해야 한다. 
              # !!!! 실제 배포운영시에는 절대로 create, create-drop, update, validate 를 사용하면 안된다. !!!! 
    properties:
            hibernate:
                '[show_sql]': true         
                '[format_sql]': true
                '[use_sql_comments]': true
    # '[show_sql]': true 는 사용되는 SQL문(JPQL)을 콘솔에 출력 해줌 
    # '[format_sql]': true 는 가독성이 좋도록 1줄로 되어진 SQL문(JPQL)을 탭이나 줄바꿈을 하여 보여줌 
    # '[use_sql_comments]': true 는 사용자 주석문을 보여줌 
    open-in-view: false
    database-platform: org.hibernate.dialect.Oracle12cDialect  # 공식 18c 버전은 없음. oracle 12C 이후부터 통용됨. 
   #database-platform: org.hibernate.dialect.Oracle10gDialect  # oracle 11g 버전에서는 database-platform: org.hibernate.dialect.Oracle10gDialect 
    
  
  messages: #메시지(파일이 여러개일 경우 ,로 구분)
    basename: messages.validation
    encoding: UTF-8
    
  devtools: #View reload
    livereload:
      enabled: true
    
    restart: #컨트롤러, 모델단이 바뀌었을 때 프로젝트 재시작(reload) 설정 (정확히는 classpath에 있는 모든 파일)
      enabled: true #재시작(reload) 함    

  
logging: #로그 지정
  level:
    #root: error
    '[com.jpa.app]': debug 
    #com.zaxxer.hikari.HikariConfig: DEBUG
    #com.zaxxer.hikari: TRACE 
    
server:
  port: 8000
  servlet:
    #context-path: /jpa_h2
    encoding:
      charset: UTF-8
      enabled: true #http 인코딩 지원을 활성화할지 여부
      force: true #post 방식으로 전송했을때 한글데이터가 안깨지도록 함
